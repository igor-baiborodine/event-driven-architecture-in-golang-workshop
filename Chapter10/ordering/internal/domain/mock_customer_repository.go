// Code generated by mockery v2.40.1. DO NOT EDIT.

package domain

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockCustomerRepository is an autogenerated mock type for the CustomerRepository type
type MockCustomerRepository struct {
	mock.Mock
}

// Authorize provides a mock function with given fields: ctx, customerID
func (_m *MockCustomerRepository) Authorize(ctx context.Context, customerID string) error {
	ret := _m.Called(ctx, customerID)

	if len(ret) == 0 {
		panic("no return value specified for Authorize")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, customerID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockCustomerRepository creates a new instance of MockCustomerRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCustomerRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCustomerRepository {
	mock := &MockCustomerRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
